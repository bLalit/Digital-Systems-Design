LIBRARY ieee;
USE ieee.std_logic_1164.all;
 
ENTITY cpu IS

        PORT ( SW : IN STD_LOGIC_VECTOR(17 DOWNTO 0);
               LEDR : OUT STD_LOGIC_VECTOR(17 DOWNTO 0);
               HEX0 : OUT STD_LOGIC_VECTOR(0 TO 6);
					HEX1 : OUT STD_LOGIC_VECTOR(0 TO 6);
					HEX2 : OUT STD_LOGIC_VECTOR(0 TO 6);
			--		HEX3 : OUT STD_LOGIC_VECTOR(0 TO 6);
			--		HEX4 : OUT STD_LOGIC_VECTOR(0 TO 6);
			--		HEX5 : OUT STD_LOGIC_VECTOR(0 TO 6);
			--		HEX6 : OUT STD_LOGIC_VECTOR(0 TO 6);
			--		HEX7 : OUT STD_LOGIC_VECTOR(0 TO 6);
					KEY : IN STD_LOGIC_VECTOR(3 DOWNTO 0));
					
END cpu;



ARCHITECTURE Behavior OF cpu IS
 
		COMPONENT sevsegdecoder		
			port	(input0: in std_logic_vector(3 downto 0);
					display: out std_logic_vector(0 to 6));							 
		END COMPONENT;
		
		COMPONENT mux is
			
			Port (datain0 	: in  STD_LOGIC_VECTOR (3 downto 0);
					datain1 	: in  STD_LOGIC_VECTOR (3 downto 0);
					sel 	: in  STD_LOGIC;
					opt 		: out STD_LOGIC_VECTOR (3 downto 0));

		END COMPONENT;
		
		COMPONENT acc is
		
		port (D : in std_logic_vector(3 downto 0);
				clk, rst : in std_logic;
				Q : out std_logic_vector(3 downto 0));
				
		END COMPONENT acc;
		
--		COMPONENT singlebit
--			port	(inp0: in std_logic;
--					disp: out std_logic_vector(0 to 6));
--		END COMPONENT;
		
		
signal b0,x0 :						std_logic;	
signal muxout :	std_logic_vector(3 downto 0);
signal SUM0,aluin0,regout0 :	std_logic_vector(4 downto 0);	
Signal display :			std_logic_vector(7 downto 0);


begin 

mux0: mux port map (SW(3 downto 0),SW(7 downto 4),SW(17),muxout);

disp0: sevsegdecoder port map (SW(3 downto 0),HEX0);
disp1: sevsegdecoder port map (SW(7 downto 4),HEX1);
disp2: sevsegdecoder port map (muxout,HEX2);
--disp3: sevsegdecoder port map (SW(15 downto 12),HEX4);


END Behavior;
